{"version":3,"sources":["actions/index.js","util/util.js","components/MonstersTable/GeneralInfo.js","components/MonstersTable/SpecialAbilities.js","components/MonstersTable/MonsterActions.js","components/MonstersTable/MonsterModal.js","components/MonstersTable/MonstersTable.js","App.js","reducers/index.js","reducers/allMonsters.js","reducers/monsterInfo.js","serviceWorker.js","index.js"],"names":["getAllMonstersAction","dispatch","a","axios","get","response","type","payload","data","results","getMonsterInfoAction","url","util","abilityScore","initialValue","i","GeneralInfo","renderMonsterGeneralInfo","push","props","monsterInfo","Container","Row","className","size","Col","alignment","armor_class","hit_points","hit_dice","speed","walk","swim","fly","burrow","abililityModCalculator","strength","dexterity","constitution","intelligence","wisdom","charisma","renderMonsterProficiencies","proficiencies","savingThrows","_","filter","element","name","search","skills","Card","Body","length","Fragment","map","key","replace","value","renderMonsterDmgProperties","damage_vulnerabilities","ListGroup","variant","Item","damage_resistances","damage_immunities","renderConditionInmunities","condition_immunities","renderMonsterSenses","senses","languages","this","split","md","Accordion","Toggle","as","Header","eventKey","Collapse","isEmpty","React","Component","connect","state","SpecialAbilities","renderSpellCasting","spellcasting","spellsColumns","dataField","text","formatter","cell","times","componentsRequired","components_required","toString","level","class","ability","dc","modifier","school","keyField","columns","spells","renderAbilityDescription","console","log","Alert","desc","dc_type","dc_value","usage","specialAbilities","special_abilities","eventKeyCounter","defaultActiveKey","MonsterActions","action","attack_bonus","success_type","damage","damage_type","damage_dice","damage_bonus","dice","bonus","monsterActions","actions","renderActionDescription","MonsterModal","showSpecialAbilities","showMonsterActions","Modal","show","showMonsterModal","onHide","handleMonsterModalClose","closeButton","ButtonGroup","Button","onClick","setState","disabled","challenge_rating","monsterTableColumns","textFilter","MonstersTable","handleMonsterModalOpen","rowEvents","e","row","showSpecialFeatures","allMonsters","bootstrap4","filterFactory","bindActionCreators","App","style","padding","rootReducer","combineReducers","Boolean","window","location","hostname","match","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.13157e1c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const getAllMonstersAction = () => async dispatch =>{\r\n    const response = await axios.get(\"https://www.dnd5eapi.co/api/monsters\");\r\n    if(response) {\r\n      dispatch({type: 'SET_ALL_MONSTERS', payload: response.data.results});   \r\n    }\r\n}\r\n\r\nexport const getMonsterInfoAction = (url) => async dispatch => {\r\n    const response = await axios.get(`https://www.dnd5eapi.co${url}`);\r\n    if(response){\r\n        dispatch({type: 'SET_MONSTER_INFO', payload: response.data})\r\n    }\r\n}","const util = {};\r\n\r\nutil.abililityModCalculator = (abilityScore) => {\r\n    var initialValue = -5;\r\n    for(var i=1; i<=abilityScore; i++) {\r\n        if(i%2 === 0) {\r\n            initialValue++;\r\n        }\r\n    }\r\n    return initialValue;\r\n}\r\n\r\nexport default util;","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport util from '../../util/util';\r\n\r\n//react-bootstrap components\r\nimport Container from 'react-bootstrap/Container';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass GeneralInfo extends React.Component {\r\n\r\n    renderMonsterGeneralInfo = () => {\r\n        var data = [];\r\n        data.push(this.props.monsterInfo);\r\n        return (<Container>\r\n            {/* <BootstrapTable bootstrap4 keyField='name' columns={monsterGeneralInfoTableColumns} data={data}/> */}\r\n            <Row className='general-info-row'>\r\n                { this.props.monsterInfo.size && <Col><span className=\"title\">Size: </span><span>{this.props.monsterInfo.size}</span></Col>}\r\n                { this.props.monsterInfo.type && <Col><span className=\"title\">Type: </span><span>{this.props.monsterInfo.type}</span></Col>}\r\n                { this.props.monsterInfo.alignment && <Col><span className=\"title\">Alignment: </span><span>{this.props.monsterInfo.alignment}</span></Col>}\r\n            </Row>\r\n            <Row className='general-info-row'>\r\n                { this.props.monsterInfo.armor_class && <Col><span className=\"title\">AC: </span><span>{this.props.monsterInfo.armor_class}</span></Col>}\r\n                { this.props.monsterInfo.hit_points && <Col><span className=\"title\">HP: </span><span>{this.props.monsterInfo.armor_class}</span></Col>}\r\n                { this.props.monsterInfo.hit_dice && <Col><span className=\"title\">Hit Dice: </span><span>{this.props.monsterInfo.hit_dice}</span></Col>}\r\n            </Row>\r\n            {this.props.monsterInfo.speed && \r\n                <Row className='general-info-row'>\r\n                <span>\r\n                <span className=\"title\">Speed:</span> \r\n                {this.props.monsterInfo.speed.walk && <span><span> Walk: </span><span>{this.props.monsterInfo.speed.walk} </span></span>}\r\n                {this.props.monsterInfo.speed.swim && <span><span>Swim: </span><span>{this.props.monsterInfo.speed.swim} </span></span>}\r\n                {this.props.monsterInfo.speed.fly && <span><span>Fly: </span><span>{this.props.monsterInfo.speed.fly} </span></span>}\r\n                {this.props.monsterInfo.speed.burrow && <span><span>Burrow: </span><span>{this.props.monsterInfo.speed.burrow} </span></span>}\r\n                </span>\r\n                </Row>}\r\n            <hr/>\r\n            <Row className=\"info-row\">\r\n                <Col>\r\n                    <div className=\"ability-mod\">{util.abililityModCalculator(this.props.monsterInfo.strength)}</div>\r\n                    <div className=\"ability-score\">{this.props.monsterInfo.strength}</div>\r\n                    <div className=\"title-ability\">STR</div>\r\n                </Col>\r\n                <Col>\r\n                    <div className=\"ability-mod\">{util.abililityModCalculator(this.props.monsterInfo.dexterity)}</div>\r\n                    <div className=\"ability-score\">{this.props.monsterInfo.dexterity}</div>\r\n                    <div className=\"title-ability\">DEX</div>\r\n                </Col>\r\n                <Col>\r\n                    <div className=\"ability-mod\">{util.abililityModCalculator(this.props.monsterInfo.constitution)}</div>\r\n                    <div className=\"ability-score\">{this.props.monsterInfo.constitution}</div>\r\n                    <div className=\"title-ability\">CON</div>\r\n                </Col>\r\n                <Col>\r\n                    <div className=\"ability-mod\">{util.abililityModCalculator(this.props.monsterInfo.intelligence)}</div>\r\n                    <div className=\"ability-score\">{this.props.monsterInfo.intelligence}</div>\r\n                    <div className=\"title-ability\">INT</div>\r\n                </Col>\r\n                <Col>\r\n                    <div className=\"ability-mod\">{util.abililityModCalculator(this.props.monsterInfo.wisdom)}</div>\r\n                    <div className=\"ability-score\">{this.props.monsterInfo.wisdom}</div>\r\n                    <div className=\"title-ability\">WIS</div>\r\n                </Col>\r\n                <Col>\r\n                    <div className=\"ability-mod\">{util.abililityModCalculator(this.props.monsterInfo.charisma)}</div>\r\n                    <div className=\"ability-score\">{this.props.monsterInfo.charisma}</div>\r\n                    <div className=\"title-ability\">CHAR</div>\r\n                </Col>\r\n            </Row>\r\n            \r\n            \r\n        </Container>)\r\n    }\r\n\r\n    renderMonsterProficiencies = () => {\r\n    \r\n        var proficiencies = this.props.monsterInfo.proficiencies;\r\n        \r\n        var savingThrows = _.filter(proficiencies, (element)=>{\r\n        return element.name.search(\"Saving Throw\") > -1;\r\n        })\r\n\r\n        var skills = _.filter(proficiencies, (element) => {\r\n        return element.name.search(\"Skill\") > -1;\r\n        })\r\n\r\n        return (<Card.Body>\r\n        {savingThrows.length > 0 && \r\n            <React.Fragment>\r\n            <h5 className=\"underlined-title\">Saving Throws</h5>\r\n            <Row>\r\n                {savingThrows.map((element)=>{\r\n                return <Col key={element.name}>\r\n                    <span className=\"title\">{element.name.replace(\"Saving Throw:\",\"\")} </span>\r\n                    <span>{element.value}</span>\r\n                </Col>\r\n                })}  \r\n            </Row>\r\n            </React.Fragment>      \r\n        }\r\n        {\r\n            skills.length > 0 && <React.Fragment> \r\n            <h5 className=\"underlined-title\">Skills</h5>\r\n            <Row>\r\n                {skills.map((element)=>{\r\n                return <Col key={element.name}>\r\n                    <span className=\"title\">{element.name.replace(\"Skill:\",\"\")} </span>\r\n                    <span>{element.value}</span>\r\n                </Col>\r\n                })}  \r\n            </Row>   \r\n            </React.Fragment>\r\n        }\r\n        <Row>\r\n            {proficiencies.map((element)=>{\r\n            return element.name.search(\"Saving Throw\") === -1 && element.name.search(\"Skill\") === -1 && <div><span className='title'>{element.name} </span><span className='proficiency-value'>{element.value}</span></div>\r\n            })}\r\n        </Row>\r\n        </Card.Body>)\r\n    }\r\n\r\n    renderMonsterDmgProperties = () => {\r\n        return <Card.Body>\r\n        {this.props.monsterInfo.damage_vulnerabilities.length > 0 && <React.Fragment>\r\n            <h5 className='dmg-property-title'>Vulnerabilities</h5>\r\n            <ListGroup variant=\"flush\">\r\n            {this.props.monsterInfo.damage_vulnerabilities.map((element)=> {\r\n                return <ListGroup.Item>{element}</ListGroup.Item>\r\n            })}\r\n            </ListGroup>\r\n        </React.Fragment>}\r\n        {this.props.monsterInfo.damage_resistances.length > 0 && <React.Fragment>\r\n            <h5 className='dmg-property-title'>Resistances</h5>\r\n            <ListGroup variant=\"flush\">\r\n            {this.props.monsterInfo.damage_resistances.map((element)=> {\r\n                return <ListGroup.Item>{element}</ListGroup.Item>\r\n            })}\r\n            </ListGroup>\r\n        </React.Fragment>}\r\n        {this.props.monsterInfo.damage_immunities.length > 0 && <React.Fragment>\r\n            <h5 className='dmg-property-title'>Immunities</h5>\r\n            <ListGroup variant=\"flush\">\r\n            {this.props.monsterInfo.damage_immunities.map((element)=> {\r\n                return <ListGroup.Item key={element}>{element}</ListGroup.Item>\r\n            })}\r\n            </ListGroup>\r\n        </React.Fragment>}\r\n        </Card.Body>\r\n    } \r\n\r\n    renderConditionInmunities = () => {\r\n        return <Card.Body>\r\n            <ListGroup variant=\"flush\">\r\n            {this.props.monsterInfo.condition_immunities.map((element)=> {\r\n                return <ListGroup.Item>{element.name}</ListGroup.Item>\r\n            })}\r\n            </ListGroup>\r\n        </Card.Body>\r\n    }\r\n   \r\n    renderMonsterSenses = () => {\r\n        return <Card.Body>\r\n        <ListGroup variant=\"flush\">\r\n        {\r\n            _.map(this.props.monsterInfo.senses, (value,key) => {\r\n            return <ListGroup.Item key={key}>\r\n                <span className=\"title\">{key.replace(\"_\",\" \")} </span><span>{value}</span>\r\n            </ListGroup.Item>\r\n            })\r\n        }\r\n        </ListGroup>\r\n        </Card.Body>\r\n    }\r\n\r\n    render() {\r\n        let languages = this.props.monsterInfo ? this.props.monsterInfo.languages.split(',') : \"\";\r\n        return <React.Fragment>\r\n                    {this.props.monsterInfo && this.renderMonsterGeneralInfo()}\r\n\r\n                    {languages.length > 0 && <div className='languages-container'>\r\n                    <h6>Languages</h6>\r\n                    <Row> \r\n                    {\r\n                        languages.map((element)=>{\r\n                        return <Col key={element} md={3}><i className=\"fas fa-circle\"/> {element}</Col>\r\n                        })\r\n                    }\r\n                    </Row>\r\n                    </div>}\r\n                    \r\n                    {this.props.monsterInfo &&\r\n                    <Accordion>\r\n                    { this.props.monsterInfo && this.props.monsterInfo.proficiencies.length > 0 &&\r\n                        <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                            Proficiencies\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            {this.renderMonsterProficiencies()}\r\n                        </Accordion.Collapse>\r\n                        </Card>\r\n                    }\r\n                    \r\n                    {this.props.monsterInfo && (this.props.monsterInfo.damage_vulnerabilities.length > 0 || this.props.monsterInfo.damage_resistances.length > 0 || this.props.monsterInfo.damage_immunities.length > 0) && \r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                        Vulnerabilities / Resistances / Inmunities\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"1\">\r\n                        {this.renderMonsterDmgProperties()}\r\n                        </Accordion.Collapse>\r\n                    </Card>}\r\n                    \r\n                    {this.props.monsterInfo && this.props.monsterInfo.condition_immunities.length > 0 && \r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n                        Condition Immunities\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"2\">\r\n                        {this.renderConditionInmunities()}\r\n                        </Accordion.Collapse>\r\n                    </Card>}\r\n\r\n                    {this.props.monsterInfo.senses && !_.isEmpty(this.props.monsterInfo.senses) && \r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"3\">\r\n                        Senses\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"3\">\r\n                        {this.renderMonsterSenses()}\r\n                        </Accordion.Collapse>\r\n                    </Card>}\r\n                    </Accordion>}\r\n                </React.Fragment>\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    //Whatever is returned will show up as props inside of BookList.\r\n    return {\r\n      monsterInfo: state.monsterInfo\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(GeneralInfo);","import React from 'react'\r\nimport _ from 'lodash';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\n//react-bootstrap components\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nclass SpecialAbilities extends React.Component {\r\n\r\n    renderSpellCasting = (spellcasting) => {\r\n        const spellsColumns = [{\r\n            dataField: 'name',\r\n            text: \"Name\"\r\n        },{\r\n            dataField: 'usage',\r\n            text: \"Usage\",\r\n            formatter: (cell) => {\r\n                if(cell){\r\n                    return  cell.times ? <span><span>{cell.times} </span><span>{cell.type}</span></span> : <span>{cell.type}</span>;\r\n                }\r\n                return \"--\";\r\n            }\r\n        },{\r\n            dataField: 'level',\r\n            text: \"Level\",\r\n            formatter: (cell) => {\r\n                if(cell  || cell > -1) {\r\n                    return cell;\r\n                }\r\n                return \"--\";\r\n            }\r\n        }]\r\n\r\n        let componentsRequired = spellcasting.components_required.length > 0 ? _.toString(spellcasting.components_required) : null;\r\n\r\n        return <div>\r\n            <Row className=\"info-row\">\r\n                {spellcasting.level && <Col><span class='title'>Level: </span><span>{spellcasting.level}</span></Col>}\r\n                {spellcasting.ability && <Col><span class='title'>Ability: </span><span>{spellcasting.ability.name}</span></Col>}\r\n                {spellcasting.dc && <Col><span className=\"title\">DC: </span><span>{spellcasting.dc}</span></Col>}\r\n                {spellcasting.modifier && <Col><span className=\"title\">Modifier: </span><span>{spellcasting.modifier}</span></Col>}  \r\n            </Row>\r\n            <Row className=\"info-row\">\r\n                {spellcasting.school && <Col><span className=\"title\">School: </span><span>{spellcasting.school}</span></Col>}  \r\n                {componentsRequired && <Col><span className=\"title\">Components Required: </span><span>{componentsRequired}</span></Col>}     \r\n            </Row>\r\n            <h5>Spells</h5>    \r\n            <BootstrapTable keyField='name' columns={spellsColumns} data={spellcasting.spells}/>\r\n        </div>;\r\n    }\r\n\r\n    renderAbilityDescription = (ability) => {\r\n        console.log(ability);\r\n        return <React.Fragment>\r\n                    <Alert variant=\"info\">\r\n                        {ability.desc}\r\n                    </Alert>\r\n                    {ability.spellcasting && this.renderSpellCasting(ability.spellcasting)}\r\n                    <Row>\r\n                        {ability.dc && <Col><span className=\"title\">DC: </span><span>{`${ability.dc.dc_type.name} ${ability.dc.dc_value}`}</span></Col>}\r\n                        {ability.usage && <Col><span className=\"title\">Usage: </span><span>{`${ability.usage.times ? ability.usage.times : \"\"} ${ability.usage.type ? ability.usage.type : \"\"}`}</span></Col>}\r\n                    </Row> \r\n                </React.Fragment>;\r\n    }\r\n\r\n    render() { \r\n        let specialAbilities = this.props.monsterInfo ? this.props.monsterInfo.special_abilities : null;\r\n        let eventKeyCounter = -1;\r\n        return(\r\n            <Accordion defaultActiveKey=\"0\">\r\n                {\r\n                    specialAbilities && specialAbilities.map((element) => {\r\n                        eventKeyCounter++;\r\n                        return <Card key={element.name}>\r\n                                    <Accordion.Toggle as={Card.Header} eventKey={eventKeyCounter}>\r\n                                        {element.name}\r\n                                    </Accordion.Toggle>\r\n                                    <Accordion.Collapse eventKey={eventKeyCounter}>\r\n                                        <Card.Body>\r\n                                        {this.renderAbilityDescription(element)}\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>;       \r\n                    })\r\n                }    \r\n            </Accordion>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    //Whatever is returned will show up as props inside of BookList.\r\n    return {\r\n      monsterInfo: state.monsterInfo\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SpecialAbilities);\r\n","import React from 'react'\r\n\r\nimport {connect} from 'react-redux';\r\n\r\n//react-bootstrap components\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nclass MonsterActions extends React.Component {\r\n    \r\n    renderActionDescription(action) {\r\n        console.log(action);\r\n        return <React.Fragment>\r\n            <Alert variant=\"info\">\r\n                        {action.desc}\r\n            </Alert>\r\n            <Container>\r\n                <Row>\r\n                    {action.attack_bonus && <div><span className=\"title\">Attack Bonus: </span><span>{action.attack_bonus}</span></div>}\r\n                </Row>\r\n                {action.dc && \r\n                <React.Fragment>\r\n                    <h6>DC</h6>\r\n                    <Row className='info-with-title-row'>\r\n                        <Col md=\"4\"><span><span className=\"title\">Type: </span><span>{action.dc.dc_type.name}</span></span></Col>\r\n                        <Col md=\"4\"><span><span className=\"title\">value: </span><span>{action.dc.dc_value}</span></span></Col>\r\n                        <Col md=\"4\"><span><span className=\"title\">Success Type: </span><span>{action.dc.success_type}</span></span></Col>\r\n                    </Row>\r\n                </React.Fragment>}\r\n            </Container>\r\n            {action.damage && <h6>Damage</h6>}\r\n            {action.damage && action.damage.length > 0 && action.damage.map((element)=>{  \r\n                return <Row className=\"info-with-title-row\" key={element.damage_type ? element.damage_type.name : element.type}>\r\n                            {element.damage_type && <Col><span className=\"title\">Damage Type: </span><span>{element.damage_type.name}</span></Col>}\r\n                            {element.damage_dice && <Col><span className=\"title\">Damage Dice: </span><span>{element.damage_dice}</span></Col>}\r\n                            {(element.damage_bonus || typeof element.damage_bonus == \"number\")  && <Col><span className=\"title\">Damage Bonus: </span><span>{element.damage_bonus}</span></Col>}\r\n\r\n                            {element.type && <Col><span className=\"title\">Damage Type: </span><span>{element.type}</span></Col>}\r\n                            {element.dice && <Col><span className=\"title\">Damage Dice: </span><span>{element.dice}</span></Col>}\r\n                            {(element.bonus || typeof element.bonus == \"number\")  && <Col><span className=\"title\">Damage Bonus: </span><span>{element.bonus}</span></Col>}\r\n                        </Row>\r\n                        })}\r\n        </React.Fragment>\r\n    }\r\n\r\n    render() { \r\n        let monsterActions = this.props.monsterInfo ? this.props.monsterInfo.actions : null;\r\n        let eventKeyCounter = -1;\r\n        return(\r\n            <Accordion defaultActiveKey=\"0\">\r\n                {\r\n                    monsterActions && monsterActions.map((element) => {\r\n                        eventKeyCounter++;\r\n                        return <Card key={element.name}>\r\n                                    <Accordion.Toggle as={Card.Header} eventKey={eventKeyCounter}>\r\n                                        {element.name}\r\n                                    </Accordion.Toggle>\r\n                                    <Accordion.Collapse eventKey={eventKeyCounter}>\r\n                                        <Card.Body>\r\n                                        {this.renderActionDescription(element)}\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>;       \r\n                    })\r\n                }    \r\n            </Accordion>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    //Whatever is returned will show up as props inside of BookList.\r\n    return {\r\n      monsterInfo: state.monsterInfo\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(MonsterActions);","import React from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\n//my components\r\nimport GeneralInfo from './GeneralInfo';\r\nimport SpecialAbilities from './SpecialAbilities';\r\nimport MonsterActions from './MonsterActions';\r\n\r\n//react-bootstrap components\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\n  \r\nclass MonsterModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          showSpecialAbilities: false,\r\n          showMonsterActions: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Modal show={this.props.showMonsterModal} onHide={this.props.handleMonsterModalClose} size={\"lg\"} className=\"search-modal\">\r\n                    <Modal.Header closeButton>\r\n                        <div className=\"monster-name-cr-container\">\r\n                        <div className=\"buttons-container\">\r\n                            <ButtonGroup>\r\n                            <Button className=\"menu-button\" variant=\"secondary\" onClick={()=>{this.setState({showSpecialAbilities: false, showMonsterActions: false})}} disabled={!this.state.showSpecialAbilities && !this.state.showMonsterActions}>General Info</Button>\r\n                            <Button className=\"menu-button\" variant=\"secondary\" onClick={()=>{this.setState({showSpecialAbilities: true, showMonsterActions: false})}} disabled={this.state.showSpecialAbilities}>Special abilities</Button>\r\n                            <Button className=\"menu-button\" variant=\"secondary\" onClick={()=>{this.setState({showMonsterActions: true, showSpecialAbilities: false})}} disabled={this.state.showMonsterActions}>Actions</Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                        <div className=\"monster-name\">\r\n                            {this.props.monsterInfo ? this.props.monsterInfo.name : \"\"}\r\n                        </div>\r\n                        <div className=\"monster-cr\">\r\n                            CR {this.props.monsterInfo ? this.props.monsterInfo.challenge_rating : \"--\"}\r\n                        </div>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {(!this.state.showSpecialAbilities && !this.state.showMonsterActions) && <GeneralInfo/>}\r\n                        {this.state.showSpecialAbilities && <SpecialAbilities/>}\r\n                        {this.state.showMonsterActions && <MonsterActions/>}\r\n                    </Modal.Body>\r\n                </Modal>}\r\n} \r\n\r\nfunction mapStateToProps(state){\r\n    //Whatever is returned will show up as props inside of BookList.\r\n    return {\r\n      monsterInfo: state.monsterInfo\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(MonsterModal);","import React from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getAllMonstersAction,\r\n        getMonsterInfoAction} from '../../actions/index';\r\nimport {bindActionCreators} from 'redux';\r\n\r\n\r\n\r\n//my components\r\nimport MonsterModal from './MonsterModal.js';\r\n\r\n// //react-bootstrap components\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n//react-bootstrap-table2\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\nimport './MonstersTable.css';\r\n\r\nconst monsterTableColumns = [{\r\n  dataField: 'name',\r\n  text: 'Monster Name',\r\n  filter: textFilter()\r\n}];\r\n\r\nclass MonstersTable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMonsterModal: false,\r\n      showSpecialFeatures: false,\r\n      showMonsterActions: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() { \r\n    this.props.getAllMonstersAction();\r\n  }\r\n\r\n  handleMonsterModalOpen = () => { \r\n    this.setState({showMonsterModal: true});\r\n  }\r\n\r\n  handleMonsterModalClose = () => {\r\n    this.setState({showMonsterModal: false});\r\n  }\r\n\r\n  rowEvents = {\r\n    onClick: (e,row) => { \r\n        this.props.getMonsterInfoAction(row.url);\r\n        this.handleMonsterModalOpen();\r\n    }\r\n  };\r\n\r\n  render() {  \r\n    // let languages = this.props.monsterInfo ? this.props.monsterInfo.languages.split(',') : \"\";\r\n    return (\r\n      <Container>\r\n        {this.props.allMonsters && \r\n        <React.Fragment>\r\n          <BootstrapTable bootstrap4 keyField='name' data={ this.props.allMonsters } columns={ monsterTableColumns } filter={ filterFactory() } rowEvents={ this.rowEvents }/>\r\n          <MonsterModal handleMonsterModalClose={this.handleMonsterModalClose} showMonsterModal={this.state.showMonsterModal}/>\r\n        </React.Fragment>}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  //Whatever is returned will show up as props inside of BookList.\r\n  return {\r\n    allMonsters: state.allMonsters,\r\n    monsterInfo: state.monsterInfo\r\n  };\r\n}\r\n\r\n//Anything returned from this function will end up as props on the BookList container.\r\nfunction mapDispatchToProps(dispatch){\r\n  // Whenever selectBook is called, the result should be passed to all of our reducers.\r\n  return bindActionCreators({\r\n    getAllMonstersAction,\r\n    getMonsterInfoAction\r\n  }, \r\n    dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MonstersTable);\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getAllMonstersAction} from './actions/index';\r\nimport {bindActionCreators} from 'redux';\r\n\r\n//my components\r\nimport MonstersTable from \"./components/MonstersTable/MonstersTable\";\r\n\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() { \r\n    this.props.getAllMonstersAction();\r\n  }\r\n\r\n  render() {  \r\n    return (\r\n      <div style={{padding: \"50px\"}}>\r\n        <MonstersTable/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  //Whatever is returned will show up as props inside of BookList.\r\n  return {\r\n    allMonsters: state.allMonsters\r\n  };\r\n}\r\n\r\n//Anything returned from this function will end up as props on the BookList container.\r\nfunction mapDispatchToProps(dispatch){\r\n  // Whenever selectBook is called, the result should be passed to all of our reducers.\r\n  return bindActionCreators({\r\n    getAllMonstersAction}, \r\n    dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport allMonsters from './allMonsters';\r\nimport monsterInfo from './monsterInfo';\r\nconst rootReducer = combineReducers({\r\n  allMonsters: allMonsters,\r\n  monsterInfo: monsterInfo\r\n})\r\n\r\nexport default rootReducer;\r\n","export default function(state = null , action) {\r\n    switch(action.type) {\r\n        case 'SET_ALL_MONSTERS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function(state = null , action) {\r\n    switch(action.type) {\r\n        case 'SET_MONSTER_INFO':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\n\nimport App from './App';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}